/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
 */
package arduscope;

import com.fazecast.jSerialComm.SerialPort;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.nio.file.Files;
import java.util.Enumeration;
import java.util.Scanner;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.commons.validator.routines.InetAddressValidator;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author ibrahim
 */
public class MainFrame extends javax.swing.JFrame {

    final double MAX_VOLTAGE = 5.1;
    final int DURATION = 20; //sec
    private final AtomicBoolean isReceivingData;
    private final AtomicLong startTime;

    XYSeries voltage;
    XYSeriesCollection voltageCollection;
    JFreeChart voltageChart;
    ChartPanel voltageChartPanel;

    SerialPort port;
    InputStream serverInput;
    OutputStream serverOutput;
    Scanner scn;
    File fileWrite;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initPlots();
        initComponents();
        populateCombobox();
        lblStatus.setVisible(false);
        isReceivingData = new AtomicBoolean(false);
        startTime = new AtomicLong(System.nanoTime());

        /*if the flowing thread doesn't work try https://www.geeksforgeeks.org/swingworker-in-java/ */
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    Thread.sleep(10);
                    startService();
                } catch (InterruptedException ex) {
                    System.out.println("Exception: " + ex.getMessage());
                }
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        btnStart = new javax.swing.JButton();
        lbVersion = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taLog = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        cbPort = new javax.swing.JComboBox<>();
        lblPort = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Master Miner");
        setAutoRequestFocus(false);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        setMinimumSize(new java.awt.Dimension(1300, 620));
        setName("frameMain"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        getContentPane().add(btnStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 240, -1));

        lbVersion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbVersion.setText("v1.0");
        getContentPane().add(lbVersion, new org.netbeans.lib.awtextra.AbsoluteConstraints(1194, 560, 100, -1));

        taLog.setColumns(20);
        taLog.setRows(5);
        taLog.setText(">>Log will appear here.");
        jScrollPane2.setViewportView(taLog);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, 500, 80));

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 1280, 420));

        cbPort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        cbPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPortActionPerformed(evt);
            }
        });
        getContentPane().add(cbPort, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 160, -1));

        lblPort.setText("Port");
        getContentPane().add(lblPort, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 50, 20));

        lblStatus.setText("Status is ............");
        getContentPane().add(lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 330, -1));

        pack();
    }// </editor-fold>                        

    private void cbPortActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if (btnStart.getText().equalsIgnoreCase("Start")) {
            port = SerialPort.getCommPort(cbPort.getSelectedItem().toString());
            port.setComPortTimeouts(SerialPort.TIMEOUT_SCANNER, 0, 0);
            if (port.openPort()) {
                log("Port Successfully Opened.");
                btnStart.setText("End");
                isReceivingData.set(true);
                startTime.set(System.nanoTime());
                scn = new Scanner(port.getInputStream());
                cbPort.setEnabled(false);
            } else {
                log("Unable to open Port.");
            }
        } else {
            if (port.closePort()) {
                log("Port Successfully Closed.");
                btnStart.setText("Start");
                isReceivingData.set(false);
                cbPort.setEnabled(true);
            } else {
                log("Unable to close Port.");
            }
        }
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the GTK+ look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
                //System.out.println(info.getName());
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainFrame().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnStart;
    private javax.swing.JComboBox<String> cbPort;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JLabel lbVersion;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextArea taLog;
    // End of variables declaration                   

    private void initPlots() {
        //helpful: https://www.youtube.com/watch?v=cw31L_OwX3A
        voltage = new XYSeries("V");
        voltageCollection = new XYSeriesCollection(null);
        voltageCollection.addSeries(voltage);
        voltageChart = ChartFactory.createXYLineChart("Scope Data", "Time (s)", "Voltage (V)", voltageCollection);

        XYPlot voltagePlot = (XYPlot) voltageChart.getPlot();
        NumberAxis accDomain = (NumberAxis) voltagePlot.getDomainAxis();
        accDomain.setRange(0, 3);
        NumberAxis accRange = (NumberAxis) voltagePlot.getRangeAxis();
        accRange.setRange(0, MAX_VOLTAGE);

        voltageChartPanel = new ChartPanel(voltageChart);
        voltageChartPanel.setBounds(10, 250, 1280, 300);
        //getContentPane().add(chartPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 1220, 340));
        getContentPane().add(voltageChartPanel);
    }

    private void log(String text) {
        taLog.append("\n>>" + text);
    }

    private void startService() {

        int x = 0;
        while (true) {
            if (!isReceivingData.get()) {
                continue;
            }
            if (scn != null && scn.hasNextLine()) {
                String line = scn.nextLine();
                double timeX = ((double) System.nanoTime() - startTime.get()) / 1000000000;
                try {
                    voltage.add(timeX, (double) 5 * Integer.parseInt(line) / 1023);
                } catch (NumberFormatException ex) {
                    System.out.println("Ex");
                }
                x++;
                if (x % 50 == 0) {
                    voltageChartPanel.repaint();
                }
            }
        }
    }

    private void populateCombobox() {
        for (SerialPort s : SerialPort.getCommPorts()) {
            cbPort.addItem(s.getSystemPortName());
        }
    }

}

